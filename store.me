/**
 * launch_process - Forks a child process to execute a command
 * @args: Array of arguments (command and its arguments)
 *
 * Return: 1 if the shell should continue running, 0 if it should terminate
 */
int launch_process(char **args)
{
    pid_t pid = fork();

    if (pid == 0) {
        if (execve(args[0], args, environ) == -1)
            perror(args[0]);
        exit(EXIT_FAILURE);
    } else if (pid < 0) {
        perror("hsh");
    } else {
        int status;
        do {
            waitpid(pid, &status, WUNTRACED);
        } while (!WIFEXITED(status) && !WIFSIGNALED(status));
    }
    return (1);
}



-----------------------------------------------------------
ghp #_# smn6x # pomg # UKipYC # aye0fkPq # JEBWZXV # 2omY2S
-----------------------------------------------------------
