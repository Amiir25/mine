#include "shell.h"

/**
 * execute_command - Executes a command
 * @args: Array of arguments (command and its arguments)
 *
 * Return: 1 if the shell should continue running, 0 if it should terminate
 */
int execute_command(char **args)
{
    const char *builtin_str[] = {"exit", "env", "cd", "setenv", "unsetenv", "alias"};
    int (*builtin_func[])(char **) = {
        &shell_exit, &shell_env, &shell_cd, &shell_setenv, &shell_unsetenv, &shell_alias
    };
    int num_builtins = sizeof(builtin_str) / sizeof(char *);
    char *command;
    int i;

    if (args[0] == NULL)
        return (1);

    for (i = 0; i < num_builtins; i++) {
        if (_strcmp(args[0], builtin_str[i]) == 0)
            return ((*builtin_func[i])(args));
    }

    command = search_path(args[0]);
    if (command) {
        launch_process(args);
        free(command);
    } else {
        fprintf(stderr, "%s: command not found\n", args[0]);
    }

    return (1);
}



-----------------------------------------------------------
ghp #_# smn6x # pomg # UKipYC # aye0fkPq # JEBWZXV # 2omY2S
-----------------------------------------------------------
